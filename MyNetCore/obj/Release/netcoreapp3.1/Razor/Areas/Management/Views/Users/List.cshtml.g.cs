#pragma checksum "C:\Users\16273\Desktop\DailyRecord\MyNetCore\Areas\Management\Views\Users\List.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b1dc600d49fafa74ea3b15dd36d1c115b83177bd"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Management_Views_Users_List), @"mvc.1.0.view", @"/Areas/Management/Views/Users/List.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\16273\Desktop\DailyRecord\MyNetCore\Areas\Management\Views\Users\List.cshtml"
using MyNetCore.Business;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b1dc600d49fafa74ea3b15dd36d1c115b83177bd", @"/Areas/Management/Views/Users/List.cshtml")]
    public class Areas_Management_Views_Users_List : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Management/Home/Index"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "C:\Users\16273\Desktop\DailyRecord\MyNetCore\Areas\Management\Views\Users\List.cshtml"
  
    ViewBag.Title = "用户列表";
    var CurrentUser = new CommonBusiness().GetCurrentUserInfo();

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n<div class=\"page-title\">\r\n    <div>\r\n        <h1>用户列表</h1>\r\n        <ul class=\"breadcrumb side\">\r\n            <li>");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b1dc600d49fafa74ea3b15dd36d1c115b83177bd3584", async() => {
                WriteLiteral("<i class=\"fa fa-home fa-lg\"></i>");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"</li>
            <li>管理</li>
            <li class=""active"">用户</li>
        </ul>
    </div>
    <div>
        <a class=""btn btn-primary btn-flat"" href=""Add""><i class=""fa fa-lg fa-plus""></i></a>
    </div>
</div>
<div class=""row"">
    <div class=""col-md-12"">
        <div class=""card"">
            <div class=""card-body"">
                <table id=""sampleTable"" entity=""Users""></table>
            </div>
        </div>
    </div>
</div>

<script charset=""utf-8"" src=""https://map.qq.com/api/gljs?v=1.exp&key=OB4BZ-D4W3U-B7VVO-4PJWW-6TKDJ-WPB77""></script>

<style type=""text/css"">
    #modal-body {
        width: 100%;
        height: 100%;
    }
</style>

<!-- 模态框（Modal） -->
<div class=""modal fade"" id=""myModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog modal-lg"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidd");
            WriteLiteral(@"en=""true"">
                    &times;
                </button>
                <h4 class=""modal-title"" id=""myModalLabel"">
                </h4>
            </div>
            <div class=""modal-body"">
                <div id=""container""></div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">
                    关闭
                </button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal -->
</div>


<script>
    tableColumn = [
        {
            title: ""名称"",
            field: ""name"",
            sortable: true,
            formatter: function (value, row, index) {
                return '<a href=""Edit?id=' + row.id + '"">' + value + '</a>';
            }
        },
        {
            title: ""头像"",
            field: ""code"",
            sortable: false,
            formatter: function (value, row, index) {
                if (!row.headImage) {
 ");
            WriteLiteral(@"                   return '<img class=""headimg"" src=""/Content/images/default.png""/>';
                }
                return '<img class=""headimg"" src=""' + row.headImage + '""/>';
            }
        },
        {
            title: ""账号"",
            field: ""code"",
            sortable: true,
        },
        {
            title: ""类型"",
            field: ""userType"",
            sortable: true,
        },
        {
            title: ""性别"",
            field: ""gender"",
            sortable: true,
        },
        {
            title: ""小组"",
            field: ""channelId"",
            sortable: true,

            sortOrder: 'desc',
        },
        {
            title: ""区域"",
            field: ""territoryId"",
            sortable: true,
        },
        {
            title: ""权限"",
            field: ""territoryProfilesId"",
            sortable: true,
        },
        {
            title: ""位置"",
            field: ""code"",
            sortable: false,
            for");
            WriteLiteral(@"matter: function (value, row, index) {
                return '<button class=""btn btn-primary btn-sm"" onclick=""showMap(' + row.id + ')"">轨迹</button>';
            }
        },
        {
            title: ""发送消息"",
            field: ""code"",
            sortable: false,
            formatter: function (value, row, index) {
                return '<button class=""btn btn-primary btn-sm btn-loading"" onclick=""sendMsg(' + row.id + ')"">发送</button>';
            }
        }
    ];

    function addMap(latLngs) {

        $(""#container"").html("""");

        if (!latLngs || latLngs.length == 0) {
            //初始化地图
            var map = new TMap.Map(""container"", {
                //zoom: 14,
                //center: center
            });
            return;
        }

        var firstLatLng;
        var lastLatLng;

        var path = [];

        for (var i = 0; i < latLngs.length; i++) {
            if (i == 0) {
                firstLatLng = latLngs[i];
            }
            ");
            WriteLiteral(@"if (i == latLngs.length - 1) {
                lastLatLng = latLngs[i];
            }

            path.push(new TMap.LatLng(latLngs[i].lat, latLngs[i].lng));
        }

        var center = new TMap.LatLng(firstLatLng.lat, firstLatLng.lng);
        //初始化地图
        var map = new TMap.Map(""container"", {
            //zoom: 14,
            center: center
        });

        var polylineLayer = new TMap.MultiPolyline({
            map, // 绘制到目标地图
            // 折线样式定义
            styles: {
                'style_blue': new TMap.PolylineStyle({
                    'color': '#3777FF', //线填充色
                    'width': 4, //折线宽度
                    'borderWidth': 2, //边线宽度
                    'borderColor': '#FFF', //边线颜色
                    'lineCap': 'round' //线端头方式
                })
            },
            geometries: [{
                styleId: 'style_blue',
                paths: path
            }],
        });

        var marker = new TMap.MultiMarker({
            ma");
            WriteLiteral(@"p,
            styles: {
                'car-down': new TMap.MarkerStyle({
                    'width': 40,
                    'height': 40,
                    'anchor': {
                        x: 20,
                        y: 20,
                    },
                    'faceTo': 'map',
                    'rotate': 180,
                    'src': '/Content/images/map/car.png',
                }),
                ""start"": new TMap.MarkerStyle({
                    ""width"": 25,
                    ""height"": 35,
                    ""anchor"": { x: 16, y: 32 },
                    ""src"": '/Content/images/map/start.png'
                }),
                ""end"": new TMap.MarkerStyle({
                    ""width"": 25,
                    ""height"": 35,
                    ""anchor"": { x: 16, y: 32 },
                    ""src"": '/Content/images/map/end.png'
                })
            },
            geometries: [{
                id: 'car',
                styleId: 'car-down',
");
            WriteLiteral(@"                position: new TMap.LatLng(firstLatLng.lat, firstLatLng.lng),
            }, {
                ""id"": 'start',
                ""styleId"": 'start',
                ""position"": new TMap.LatLng(firstLatLng.lat, firstLatLng.lng)
            }, {
                ""id"": 'end',
                ""styleId"": 'end',
                ""position"": new TMap.LatLng(lastLatLng.lat, lastLatLng.lng)
            }]
        });
        marker.moveAlong({
            'car': {
                path,
                speed: 5000
            }
        }, {
            autoRotation: true
        })
    }

    function showMap(userId) {
        $('#myModal').modal();
        setTimeout(function () {
            $.ajax({
                type: ""POST"",  //提交方式
                url: ""GetThisMonthHistory"",//路径
                data: { id: userId },
                dataType: ""json"",
                success: function (result) {//返回数据根据结果进行相应的处理
                    addMap(result.data);
                },
");
            WriteLiteral(@"                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    dealErrorInfo(XMLHttpRequest);
                }
            });
        }, 500)
    }

    function sendMsg(userId) {
        $.ajax({
            type: ""POST"",  //提交方式
            url: ""SendMsg"",//路径
            data: { id: userId },
            dataType: ""json"",
            success: function (result) {//返回数据根据结果进行相应的处理
                if (result.result == ""failure"") {
                    showErrorMsg(result.msg);
                }
                resetLoadButton();
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                dealErrorInfo(XMLHttpRequest);
                resetLoadButton();
            }
        });
    }


</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
