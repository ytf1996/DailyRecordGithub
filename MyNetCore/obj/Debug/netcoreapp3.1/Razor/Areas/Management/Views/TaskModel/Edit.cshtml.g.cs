#pragma checksum "C:\Users\16273\Desktop\DailyRecord\MyNetCore\Areas\Management\Views\TaskModel\Edit.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c70992975f4ed2e4019cbec7d6faa75b31d09334"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Management_Views_TaskModel_Edit), @"mvc.1.0.view", @"/Areas/Management/Views/TaskModel/Edit.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\16273\Desktop\DailyRecord\MyNetCore\Areas\Management\Views\TaskModel\Edit.cshtml"
using MyNetCore.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\16273\Desktop\DailyRecord\MyNetCore\Areas\Management\Views\TaskModel\Edit.cshtml"
using MyNetCore.Business;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c70992975f4ed2e4019cbec7d6faa75b31d09334", @"/Areas/Management/Views/TaskModel/Edit.cshtml")]
    public class Areas_Management_Views_TaskModel_Edit : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<TaskModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 5 "C:\Users\16273\Desktop\DailyRecord\MyNetCore\Areas\Management\Views\TaskModel\Edit.cshtml"
  
    var htmlStr = BusinessHelper.BuildCreateOrEditPage<TaskModel>(Model, "6");

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
#nullable restore
#line 9 "C:\Users\16273\Desktop\DailyRecord\MyNetCore\Areas\Management\Views\TaskModel\Edit.cshtml"
Write(htmlStr);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<div class=""tab2Content"">
    <div class=""card"">
        <div class=""card-body"">
            <div class=""row"">
                <div class=""col-md-12"">
                    <div>
                        
                    </div>
                    <div id=""toolbar"">
                        <input id=""btn-search"" type=""button"" class=""form-control btn btn-default btnForSearch"" value=""查询"" />
                    </div>
                    <table id=""sampleTableForTaskHistory"" entity=""TaskHistory"" class=""otherTable""></table>
                </div>
            </div>
        </div>
    </div>
</div>

<script type=""text/javascript"">

    tableColumn = [
        {
            title: ""操作时间"",
            field: ""createdDate"",
            sortable: true,
        },
        {
            title: ""是否成功"",
            field: ""isSuccess"",
            sortable: true
        },
        {
            title: ""错误信息"",
            field: ""errorMsg""
        }
    ];

    //默认Name排序，订单详情model没");
            WriteLiteral(@"用到Name，所以指定按照Id排序
    defalutOrderCol = ""CreatedDate"";
    defalutOrder = ""desc"";

    $(document).ready(function () {

        function checkFrequency() {
            var value = $(""#Frequency"").val();
            if (value == ""Manual"") {
                $("".CycleType"").hide();
                $("".CycleTypeValue"").hide();
                $("".TimingType"").hide();
                $("".PlanRunDate"").hide();
                $("".PlanRunTime"").hide();
            }
            else if (value == ""Timing"") {
                $("".CycleType"").hide();
                $("".CycleTypeValue"").hide();
                $("".TimingType"").show();
                $("".PlanRunDate"").show();
                $("".PlanRunTime"").show();
                checkTimingType();
            }
            else if (value == ""Cycle"") {
                $("".CycleType"").show();
                $("".CycleTypeValue"").show();
                $("".TimingType"").hide();
                $("".PlanRunDate"").hide();
                $("".Pl");
            WriteLiteral(@"anRunTime"").hide();
            }
        }

        checkFrequency();

        $(""#Frequency"").change(function () {
            checkFrequency();
        });

        function checkTimingType() {
            var value = $(""#TimingType"").val();
            if (value == ""Day"") {
                $("".PlanRunDate"").hide();
            }
            else if (value == ""Month"") {
                $("".PlanRunDate"").show();
            }
        }

        checkTimingType();

        $(""#TimingType"").change(function () {
            checkTimingType();
        });

        showOtherTab(""运行历史记录"", 2, false);

        initTable(""sampleTableForTaskHistory"", ""GetListDataForTaskHistory"");
    });
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TaskModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
